{"static void VOS_MD5CalcDigestOfBuff(MD5_CTX *context)\n    {\n        uint32_t i;\n        uint32_t tmpValue;\n        uint32_t textFragment[16];\n        uint32_t tmpState[4];\n        uint8_t *tmpText = context->aucBuffer;\n\n        tmpState[0] = context->aulState[0];\n        tmpState[1] = context->aulState[1];\n        tmpState[2] = context->aulState[2];\n        tmpState[3] = context->aulState[3];\n\n        for (i = 0; i < 16; i += 4)\n        {\n            textFragment[i] = (uint32_t)(tmpText[0]) + ((uint32_t)(tmpText[1]) << 8) + ((uint32_t)(tmpText[2]) << 16) +\n                              ((uint32_t)(tmpText[3]) << 24);\n\n            textFragment[i + 1] = (uint32_t)(tmpText[4]) + ((uint32_t)(tmpText[5]) << 8) +\n                                  ((uint32_t)(tmpText[6]) << 16) + ((uint32_t)(tmpText[7]) << 24);\n\n            textFragment[i + 2] = (uint32_t)(tmpText[8]) + ((uint32_t)(tmpText[9]) << 8) +\n                                  ((uint32_t)(tmpText[10]) << 16) + ((uint32_t)(tmpText[11]) << 24);\n\n            textFragment[i + 3] = (uint32_t)(tmpText[12]) + ((uint32_t)(tmpText[13]) << 8) +\n                                  ((uint32_t)(tmpText[14]) << 16) + ((uint32_t)(tmpText[15]) << 24);\n            tmpText += 16;\n        }\n\n        MD5_F_PROC(tmpValue, tmpState, textFragment);\n        MD5_G_PROC(tmpValue, tmpState, textFragment);\n        MD5_H_PROC(tmpValue, tmpState, textFragment);\n        MD5_I_PROC(tmpValue, tmpState, textFragment);\n\n        context->aulState[0] += tmpState[0];\n        context->aulState[1] += tmpState[1];\n        context->aulState[2] += tmpState[2];\n        context->aulState[3] += tmpState[3];\n    }": "0", "static bool VOS_MD5PadBuff(MD5_CTX *context)\n    {\n\n        bool needAnotherBuff = (context->uiPos >= MD5_TEXT_IN_BUFFER_MAX);\n\n        context->aucBuffer[context->uiPos] = 0x80;\n        context->uiPos++;\n        if (needAnotherBuff)\n        {\n\n            while (context->uiPos < MD5_BUFFER_SIZE)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n        }\n        else\n        {\n\n            while (context->uiPos < MD5_TEXT_IN_BUFFER_MAX)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n\n            MD5_RECORD_MESSAGE_LEN(context);\n        }\n\n        return needAnotherBuff;\n    }": "1", "void VOS_MD5Init(MD5_CTX *context)\n    {\n        if (context == NULL)\n        {\n            return;\n        }\n\n        (void)memset_s(context, sizeof(MD5_CTX), 0, sizeof(MD5_CTX));\n\n        context->aulState[0] = 0x67452301;\n        context->aulState[1] = 0xefcdab89;\n        context->aulState[2] = 0x98badcfe;\n        context->aulState[3] = 0x10325476;\n    }": "2", "void VOS_MD5Update(MD5_CTX *context, uint8_t *input, uint32_t inputLen)\n    {\n        uint64_t totalInputBits;\n        uint32_t inputIndex = 0;\n        uint64_t inputBit;\n        uint32_t tmpPos;\n        uint8_t *contextBuffer = NULL;\n\n        if ((context == NULL) || ((input == NULL) && (inputLen != 0)))\n        {\n            return;\n        }\n\n        inputBit = (uint64_t)inputLen << 3;\n\n        totalInputBits = ((uint64_t)context->aulCount[1] << 32) + context->aulCount[0];\n        if ((MD5_INPUT_LEN_MAX - totalInputBits) < inputBit)\n        {\n            return;\n        }\n        totalInputBits += inputBit;\n        context->aulCount[0] = (uint32_t)totalInputBits;\n        context->aulCount[1] = (uint32_t)(totalInputBits >> 32);\n\n        tmpPos = context->uiPos;\n        contextBuffer = context->aucBuffer;\n        while (inputIndex < inputLen)\n        {\n\n            if (tmpPos < MD5_BUFFER_SIZE)\n            {\n                contextBuffer[tmpPos] = input[inputIndex];\n                ++inputIndex;\n                ++tmpPos;\n                continue;\n            }\n\n            VOS_MD5CalcDigestOfBuff(context);\n            tmpPos = 0;\n        }\n\n        if (tmpPos == MD5_BUFFER_SIZE)\n        {\n            VOS_MD5CalcDigestOfBuff(context);\n            tmpPos = 0;\n        }\n        context->uiPos = tmpPos;\n        return;\n    }": "3", "void VOS_MD5FinalEx(uint8_t digest[], uint32_t bufLen, MD5_CTX *context)\n    {\n        bool needAnotherBuff = 0;\n\n        if ((digest == NULL) || (context == NULL) || (bufLen < MD5_DIGEST_LEN))\n        {\n            return;\n        }\n\n        needAnotherBuff = VOS_MD5PadBuff(context);\n        VOS_MD5CalcDigestOfBuff(context);\n\n        if (needAnotherBuff)\n        {\n            context->uiPos = 0;\n            while (context->uiPos < MD5_TEXT_IN_BUFFER_MAX)\n            {\n                context->aucBuffer[context->uiPos] = 0;\n                context->uiPos++;\n            }\n            MD5_RECORD_MESSAGE_LEN(context);\n            VOS_MD5CalcDigestOfBuff(context);\n        }\n\n        MD5_COMPOSE_DIGEST(digest, context->aulState);\n\n        (void)memset_s(context, sizeof(MD5_CTX), 0, sizeof(MD5_CTX));\n    }": "4", "void VOS_MD5Final(uint8_t digest[16], MD5_CTX *context)\n    {\n        VOS_MD5FinalEx(digest, MD5_DIGEST_LEN, context);\n    }": "5", "void VOS_MD5CalcEx(uint8_t *output, uint32_t outputLen, const uint8_t *input, uint32_t inputLen)\n    {\n        MD5_CTX context;\n\n        if (outputLen < MD5_DIGEST_LEN)\n        {\n            return;\n        }\n\n        VOS_MD5Init(&context);\n        VOS_MD5Update(&context, (uint8_t *)(uintptr_t)input, inputLen);\n        VOS_MD5FinalEx(output, outputLen, &context);\n    }": "6", "void VOS_MD5Calc(uint8_t *output, uint8_t *input, uint32_t inputLen)\n    {\n        VOS_MD5CalcEx(output, MD5_DIGEST_LEN, input, inputLen);\n    }": "7"}