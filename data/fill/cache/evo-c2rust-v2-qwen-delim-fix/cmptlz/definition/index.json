{"typedef struct\n{\n    uint32_t v;\n} __attribute__((packed)) CmptlzUnalignU32;": "0", "typedef enum\n{\n    CMPTLZ_ERROR_DATA = 1,\n    CMPTLZ_ERROR_MEM,\n    CMPTLZ_ERROR_UNSUPPORTED,\n    CMPTLZ_ENC_ERROR_FILESIZE,\n    CMPTLZ_ENC_CTX_INIT_FAIL,\n    CMPTLZ_ENC_RC_INIT_FAIL,\n    CMPTLZ_ENC_MF_INIT_FAIL,\n    CMPTLZ_ENC_ERROR_WRITE,\n    CMPTLZ_ENC_ERROR_HEAD,\n    CMPTLZ_ENC_ERROR_PARAM,\n    CMPTLZ_ERROR_BUTT\n} EnCmptErrNo;": "1", "typedef uint16_t CmptLzDecProb;": "2", "typedef enum\n{\n    CMPTLZ_DICT_MEM = 1,\n    CMPTLZ_PROB_MEM,\n    CMPTLZ_ENC_CCTX,\n    CMPTLZ_MF_CCTX,\n    CMPTLZ_MF_HASH,\n    CMPTLZ_MF_SON,\n    CMPTLZ_RC_CCTX,\n    CMPTLZ_RC_BUF,\n    CMPTLZ_MEM_TYPE_BUT\n} EnCmptLzMemType;": "3", "typedef struct\n{\n    void *(*CmptLzAlloc)(int32_t enMemType, size_t size);\n    void (*CmptLzFree)(int32_t enMemType, void *address);\n} CmptLzMemHook;": "4", "typedef void (*CmptlzLogFunc)(const char *message, size_t size);": "5", "typedef enum\n{\n    CMPTLZ_FINISH_ANY,\n    CMPTLZ_FINISH_END\n} EnCmptLzFinMode;": "6", "typedef enum\n{\n    CMPTLZ_STATUS_NOT_SPECIFIED,\n    CMPTLZ_STATUS_FINISHED_WITH_MARK,\n    CMPTLZ_STATUS_NOT_FINISHED,\n    CMPTLZ_STATUS_NEEDS_MORE_INPUT,\n    CMPTLZ_STATUS_MAYBE_FINISHED_WITHOUT_MARK,\n    CMPTLZ_STATUS_BUT\n} EnCmptLzStatus;": "7", "typedef struct\n{\n    unsigned char litCtx;\n    unsigned char litPos;\n    unsigned char posBits;\n    unsigned char alignPad;\n    uint32_t dicSize;\n} CmptLzDecProt;": "8", "typedef struct\n{\n    CmptLzDecProt prop;\n    CmptLzDecProb *probs;\n    CmptLzDecProb *probsPlus1664;\n    unsigned char *dict;\n    size_t dictBufSize;\n    size_t dictPos;\n    const unsigned char *buf;\n    uint32_t range;\n    uint32_t code;\n    uint32_t processedPos;\n    uint32_t checkDicSize;\n    uint32_t reps[4];\n    uint32_t state;\n    uint32_t remainLen;\n    uint32_t numProbs;\n    unsigned tempBufSize;\n    unsigned char tempBuf[CMPTLZ_REQUIRED_INPUT_MAX];\n} CmptLzDecCtx;": "9", "typedef struct\n{\n    const unsigned char *pSrcIn;\n    size_t strInLen;\n    size_t strInCostLen;\n} CmptLzDecIn;": "10", "typedef struct\n{\n    unsigned char *pDestOut;\n    size_t destOutLen;\n    size_t destOutFillLen;\n} CmptLzDecOut;": "11", "typedef struct\n{\n    const unsigned char *protData;\n    unsigned protSize;\n    CmptLzMemHook *memHook;\n} CmptlzDecParam;": "12", "typedef struct TagCmptLzEncCtx CmptLzEncCtx;": "13", "typedef struct\n{\n    int level;\n    uint32_t dictSize;\n    int litCtx;\n    int litPos;\n    int posBits;\n    int fastBytes;\n    int numThreads;\n    unsigned char *protData;\n    size_t protSize;\n    CmptLzMemHook *memHook;\n} CmptlzCompParam;": "14", "typedef uint16_t CmptlzProb;": "15", "typedef struct\n{\n    int level;\n    uint32_t dictSize;\n    int litCtx;\n    int litPos;\n    int posBits;\n    int fastBytes;\n    int numThreads;\n} CmptlzEncParam;": "16", "typedef struct\n{\n    uint32_t pos;\n    uint32_t prevByte;\n    CmptlzProb literal[1 << CMPTLZ_LCLP_MAX][CMPTLZ_LIT_MAX_SIZE];\n    uint32_t lcBits;\n    uint32_t posMask;\n} LitMarcov;": "17", "typedef struct\n{\n    uint32_t range;\n    uint64_t cache;\n    uint64_t low;\n    uint64_t cacheSize;\n    uint8_t *buf;\n    uint8_t *bufBase;\n    uint8_t *outBuf;\n    size_t outBufLeft;\n} CmptRcCtx;": "18", "typedef struct TagCmptMatchFinder CmptMfCtx;": "19", "struct TagCmptMatchFinder\n{\n    const uint8_t *srcStart;\n    size_t srcLen;\n    uint32_t hashRootTable[256];\n    uint32_t mfStart;\n    uint32_t niceLen;\n    uint32_t readAhead;\n    uint32_t readPos;\n    uint32_t cyclePos;\n    uint32_t cycleSize;\n    uint32_t offset;\n    uint32_t *hash;\n    uint32_t *son;\n    uint32_t depth;\n    uint32_t hashCount;\n    uint32_t sonsCount;\n    uint32_t hashMask;\n};": "20", "typedef struct\n{\n    CmptlzProb low[256];\n    CmptlzProb high[1 << CMPT_LEN_HIGH_BITS];\n    uint32_t prices[CMPTLZ_NUM_PB_STATES_MAX]\n                   [(1 << CMPT_LEN_HIGH_BITS) + (1 << CMPT_LEN_MID_BITS) + (1 << CMPT_LEN_LOW_BITS)];\n    uint32_t tableSize;\n} CmptLenEncoder;": "21", "typedef enum\n{\n    LIT_LIT,\n    MATCH_LIT_LIT,\n    REP_LIT_LIT,\n    SHORTREP_LIT_LIT,\n    MATCH_LIT,\n    REP_LIT,\n    SHORTREP_LIT,\n    LIT_MATCH,\n    LIT_LONGREP,\n    LIT_SHORTREP,\n    NOTLIT_MATCH,\n    NOTLIT_REP,\n} CmptlzState;": "22", "typedef struct\n{\n    uint32_t len;\n    uint32_t dist;\n} CmptlzMatchPair;": "23", "typedef struct\n{\n    CmptlzState state;\n    uint32_t price;\n    uint32_t posPrev;\n    uint32_t backPrev;\n    uint32_t backs[CMPTLZ_NUM_REPS];\n} CmptlzOpt;": "24", "struct TagCmptLzEncCtx\n{\n    int level;\n    int litCtx;\n    int litPos;\n    int posBits;\n    uint32_t dicSize;\n    int endMarker;\n    uint32_t numFastBytes;\n    bool encNeedFinish;\n    uint64_t nowpos64;\n    uint32_t cmptlzResponse;\n    CmptlzState state;\n    LitMarcov litMarcov;\n    uint32_t reps[CMPTLZ_NUM_REPS];\n    CmptlzProb isRep[CMPTLZ_NUM_STATES];\n    CmptlzProb isRepG0[CMPTLZ_NUM_STATES];\n    CmptlzProb isRepG1[CMPTLZ_NUM_STATES];\n    CmptlzProb isRepG2[CMPTLZ_NUM_STATES];\n    CmptlzProb isMatch[CMPTLZ_NUM_STATES][CMPTLZ_NUM_PB_STATES_MAX];\n    CmptlzProb isRep0Long[CMPTLZ_NUM_STATES][CMPTLZ_NUM_PB_STATES_MAX];\n    CmptlzProb probDistSlot[CMPTLZ_DIST_STATE_TOTAL][1 << CMPTLZ_DIST_SLOT_BITS];\n    CmptlzProb probDistSpecial[CMPT_DIST_LIMIT_2];\n    CmptlzProb probAlign[1 << CMPTLZ_ALIGN_BITS];\n    uint32_t posMask;\n    uint64_t pbMask;\n    uint64_t lpMask;\n    CmptRcCtx *rcCtx;\n    CmptMfCtx *mfCtx;\n    CmptlzMatchPair matches[CMPT_MF_LONGEST_MATCH + 1];\n    uint32_t matchesCount;\n    uint32_t longestMatchLen;\n    uint32_t backRes;\n    uint32_t lenRes;\n    uint32_t optEndIndex;\n    uint32_t optsCurIndex;\n    CmptlzOpt opts[CMPT_DP_OPTMAX];\n    CmptLenEncoder matchLenEncoder;\n    CmptLenEncoder repLenEncoder;\n    int repLenPriceCount;\n    int matchPriceCount;\n    uint32_t priceRootTable[CMPT_PRIICE_TABLE_SIZE];\n    uint32_t priceDistSlotTable[CMPTLZ_DIST_STATE_TOTAL][1 << CMPTLZ_DIST_SLOT_BITS];\n    uint32_t priceDistTable[CMPTLZ_DIST_STATE_TOTAL][1 << 7];\n    uint32_t priceAlignTable[1 << CMPTLZ_ALIGN_BITS];\n    uint32_t distTableSize;\n};": "25", "static CmptlzLogFunc g_cmptlzLogFunc = NULL;": "26"}